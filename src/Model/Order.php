<?php

namespace Jobjen\BolRetailerV10\Model;

use Jobjen\BolRetailerV10\Enum;

// This class is auto generated by OpenApi\ModelGenerator
class Order extends AbstractModel
{
    /**
     * Returns the definition of the model: an associative array with field names as key and
     * field definition as value. The field definition contains of
     * model: Model class or null if it is a scalar type
     * array: Boolean whether it is an array
     * @return array The model definition
     */
    public function getModelDefinition(): array
    {
        return [
            'orderId' => [ 'model' => null, 'enum' => null, 'array' => false ],
            'pickupPoint' => [ 'model' => null, 'enum' => null, 'array' => false ],
            'orderPlacedDateTime' => [ 'model' => null, 'enum' => null, 'array' => false ],
            'shipmentDetails' => [ 'model' => ShipmentDetails::class, 'enum' => null, 'array' => false ],
            'billingDetails' => [ 'model' => BillingDetails::class, 'enum' => null, 'array' => false ],
            'orderItems' => [ 'model' => OrderOrderItem::class, 'enum' => null, 'array' => true ],
        ];
    }

    /**
     * @var string The identifier of the order.
     */
    public $orderId;

    /**
     * @var bool Indicates whether this order is shipped to a Pick Up Point.
     */
    public $pickupPoint;

    /**
     * @var string The date and time in ISO 8601 format when the order was placed.
     */
    public $orderPlacedDateTime;

    /**
     * @var ShipmentDetails The address details where this order needs to be shipped to. This can be the customers' own
     * address, a (company) business address or a Pick Up Point address.
     */
    public $shipmentDetails;

    /**
     * @var BillingDetails The details of the customer that is responsible for the financial fulfillment of this order.
     */
    public $billingDetails;

    /**
     * @var OrderOrderItem[]
     */
    public $orderItems = [];

    public function getOrderPlacedDateTime(): ?\DateTime
    {
        if (empty($this->orderPlacedDateTime)) {
            return null;
        }

        return \DateTime::createFromFormat(\DateTime::ATOM, $this->orderPlacedDateTime);
    }
}
