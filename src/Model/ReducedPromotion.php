<?php

namespace Jobjen\BolRetailerV10\Model;

use Jobjen\BolRetailerV10\Enum;

// This class is auto generated by OpenApi\ModelGenerator
class ReducedPromotion extends AbstractModel
{
    /**
     * Returns the definition of the model: an associative array with field names as key and
     * field definition as value. The field definition contains of
     * model: Model class or null if it is a scalar type
     * array: Boolean whether it is an array
     * @return array The model definition
     */
    public function getModelDefinition(): array
    {
        return [
            'promotionId' => [ 'model' => null, 'enum' => null, 'array' => false ],
            'title' => [ 'model' => null, 'enum' => null, 'array' => false ],
            'startDateTime' => [ 'model' => null, 'enum' => null, 'array' => false ],
            'endDateTime' => [ 'model' => null, 'enum' => null, 'array' => false ],
            'countries' => [ 'model' => PromotionCountryCode::class, 'enum' => null, 'array' => true ],
            'promotionType' => [ 'model' => null, 'enum' => Enum\ReducedPromotionPromotionType::class, 'array' => false ],
            'retailerSpecificPromotion' => [ 'model' => null, 'enum' => null, 'array' => false ],
            'campaign' => [ 'model' => Campaign::class, 'enum' => null, 'array' => false ],
        ];
    }

    /**
     * @var string The identifier of the promotion.
     */
    public $promotionId;

    /**
     * @var string The title of the promotion.
     */
    public $title;

    /**
     * @var string The starting date and time of the promotion.
     */
    public $startDateTime;

    /**
     * @var string The ending date and time of the promotion.
     */
    public $endDateTime;

    /**
     * @var PromotionCountryCode[]
     */
    public $countries = [];

    /**
     * @var Enum\ReducedPromotionPromotionType The type of the promotion.
     */
    public $promotionType;

    /**
     * @var bool Indicates whether the promotion is retailer specific or open to the platform.
     */
    public $retailerSpecificPromotion;

    /**
     * @var Campaign
     */
    public $campaign;

    public function getStartDateTime(): ?\DateTime
    {
        if (empty($this->startDateTime)) {
            return null;
        }

        return \DateTime::createFromFormat(\DateTime::ATOM, $this->startDateTime);
    }

    public function getEndDateTime(): ?\DateTime
    {
        if (empty($this->endDateTime)) {
            return null;
        }

        return \DateTime::createFromFormat(\DateTime::ATOM, $this->endDateTime);
    }

    /**
     * Returns an array with the countryCodes from countries.
     * @return string[] CountryCodes from countries.
     */
    public function getCountriesCountryCodes(): array
    {
        return array_map(function ($model) {
            return $model->countryCode;
        }, $this->countries);
    }

    /**
     * Sets countries by an array of countryCodes.
     * @param string[] $countryCodes CountryCodes for countries.
     */
    public function setCountriesCountryCodes(array $countryCodes): void
    {
        $this->countries = array_map(function ($countryCode) {
            return PromotionCountryCode::constructFromArray(['countryCode' => $countryCode]);
        }, $countryCodes);
    }

    /**
     * Adds a new PromotionCountryCode to countries by countryCode.
     * @param string $countryCode CountryCode for the PromotionCountryCode to add.
     */
    public function addCountriesCountryCode(string $countryCode): void
    {
        $this->countries[] = PromotionCountryCode::constructFromArray(['countryCode' => $countryCode]);
    }
}
